
INCLUDE(GNUInstallDirs)
INCLUDE(CTest)
  
SET(SoDaSignals_VERSION_MAJOR 4)
SET(SoDaSignals_VERSION_MINOR 1)
SET(SoDaSignals_VERSION_PATCH 1)
SET(SoDaSignals_VERSION "${SoDaSignals_VERSION_MAJOR}.${SoDaSignals_VERSION_MINOR}.${SoDaSignals_VERSION_PATCH}")

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/Modules" ${CMAKE_MODULE_PATH} )

MESSAGE("SoDaSignals_VERSION=[${SoDaSignals_VERSION}]")

SET(DOXY_PROJECT_VERSION "${SoDaSignals_VERSION}-${SoDaUtils_GIT_ID}")

set(SIGNALS_SUBLIB_SOURCE_DIR ${CMAKE_CURRENT_LIST_DIR})

CONFIGURE_FILE (
"${SIGNALS_SUBLIB_SOURCE_DIR}/version.hxx.in"
"${PROJECT_BINARY_DIR}/SignalsVersion.hxx"
  )
INCLUDE_DIRECTORIES("${PROJECT_BINARY_DIR}")

INSTALL(FILES ${PROJECT_BINARY_DIR}/SignalsVersion.h DESTINATION "include/SoDa")

set(SIGNALS_CONFIG_EXPORT_DIR "${CMAKE_INSTALL_LIBDIR}/cmake/SoDaSignals")
set(EXPORT_TARGETS sodasignals)

configure_package_config_file (
  "${SIGNALS_SUBLIB_SOURCE_DIR}/SoDaSignalsConfigVersion.cmake.in"
  "${PROJECT_BINARY_DIR}/SoDaSignalsConfigVersion.cmake"
  INSTALL_DESTINATION "${SIGNALS_CONFIG_EXPORT_DIR}"
  PATH_VARS CMAKE_INSTALL_INCLUDEDIR CMAKE_INSTALL_LIBDIR SIGNALS_CONFIG_EXPORT_DIR
  )  

  write_basic_package_version_file(
    "${PROJECT_BINARY_DIR}/SoDaSignalsConfigVersion.cmake"
    VERSION "${SoDaSignals_VERSION}"  
    COMPATIBILITY AnyNewerVersion)
  

INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR} ${SIGNALS_SUBLIB_SOURCE_DIR}/include)

message("FFTW3_LIBRARIES ${FFTW3_LIBRARIES}")
set(SIGNALS_DEP_LIBS ${FFTW3_LIBRARIES})
list(APPEND SIGNALS_DEP_LIBS sodautils)

# redirect sodautils includes
set(sodautils_include_dirs ${PROJECT_SOURCE_DIR}/Utils/include)


set(DEP_INCLS ${FFTW3_INCLUDE_DIRS} ${sodautils_include_dirs})

set(SWIG_ENABLED 0)

# get the right directory name/forms

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(include)
ADD_SUBDIRECTORY(test)

FIND_PACKAGE(Doxygen QUIET)

IF(DOXYGEN_FOUND)
  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/DoxyfileSignals @ONLY)
  ADD_CUSTOM_TARGET(doc ALL
    ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/DoxyfileSignals
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    COMMENT "Generating API documentation with Doxygen" VERBATIM
    )

  INSTALL(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/html DESTINATION share/SoDaSignals/doc)
ENDIF()

INSTALL(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/examples/ DESTINATION share/SoDaSignals/examples)

IF(BUILD_RPM OR BUILD_DEB)
  INCLUDE(cmake/BuildPackage.cmake)
ENDIF()
